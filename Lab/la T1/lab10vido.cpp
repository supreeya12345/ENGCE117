#include <stdio.h>
#include <string.h>

int main() {
    int isPalindrome = 1; // เป็นตัวแปรที่ใช้เก็บสถานะว่าเป็น palindrome หรือไม่ ค่าเริ่มต้นคือ 1 หมายถึงเชื่อว่าคำนี้เป็น palindrome ถ้าเจอเงื่อนไขที่ทำให้คำนี้ไม่เป็น palindrome จะเปลี่ยนเป็น 0
    int K = 0; // K  เป็นตัวแปรเก็บตำแหน่งของตัวอักษรแรกของคำ (เริ่มจาก 0)
    int W; // W เป็นตัวแปรเก็บตำแหน่งของตัวอักษรสุดท้ายของคำ
    char word[100]; //เป็นตัวแปรประเภทอาร์เรย์ที่ใช้เก็บคำที่ผู้ใช้ป้อนเข้ามา โดยมีขนาดไม่เกิน 100 ตัวอักษร
    
    printf("Enter word: "); //พิมพ์ข้อความ "Enter word: " เพื่อขอให้ผู้ใช้ป้อนคำ
    scanf("%s", word); //scanf("%s", word); อ่านคำที่ผู้ใช้ป้อนเข้ามาและเก็บในตัวแปร word
    
    W = strlen(word) - 1; // ฟังก์ชัน strlen(word) ใช้เพื่อหาจำนวนตัวอักษรในคำที่ผู้ใช้ป้อน
    //W = strlen(word) - 1; กำหนดค่า W ให้เป็นตำแหน่งของตัวอักษรสุดท้ายของคำ โดยใช้จำนวนตัวอักษรทั้งหมดลบด้วย 1

    while (K < W) { // วนลูป while เมื่อ K มีค่าน้อยกว่า W (เริ่มเปรียบเทียบจากตัวอักษรแรกของคำกับตัวอักษรสุดท้าย)
        if (word[K] != word[W]) { //เช็คว่าตัวอักษรที่ตำแหน่ง K (จากต้นคำ) เท่ากับตัวอักษรที่ตำแหน่ง W (จากท้ายคำ) หรือไม่
//ถ้าไม่เท่ากัน (word[K] != word[W]) หมายความว่าคำนี้ไม่ใช่ palindrome
            isPalindrome = 0; //กำหนดค่า isPalindrome = 0; เพื่อระบุว่าไม่ใช่ palindrome
            break;//ใช้คำสั่ง break; เพื่อออกจากลูปทันที เพราะไม่จำเป็นต้องตรวจสอบต่อ
        }
        K++; // ถ้าตัวอักษรจากด้านหน้าและด้านหลังตรงกัน จะเพิ่มค่า K เพื่อเลื่อนไปยังตัวอักษรถัดไปจากด้านหน้า
        W--; // ลดค่า W เพื่อเลื่อนไปยังตัวอักษรถัดไปจากด้านหลัง
    }
    
    if (isPalindrome) { // เช็คว่า isPalindrome เป็น 1 หรือไม่ (หมายถึงคำนี้เป็น palindrome)
//ถ้าเป็น palindrome จะแสดงข้อความ "Not Pass."
        printf(" Not Pass.\n");
    } else {
        printf("Pass.\n");//ถ้าไม่เป็น palindrome จะแสดงข้อความ "Pass."
    }

    return 0;//คืนค่าเป็น0
}